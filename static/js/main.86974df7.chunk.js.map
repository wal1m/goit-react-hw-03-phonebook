{"version":3,"sources":["components/Container/Container.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["useStyles","createUseStyles","container","marginTop","padding","width","Container","children","classes","className","form","border","borderRadius","button","ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","newContact","id","uuidv4","type","onChange","target","value","marginLeft","cursor","listItem","display","justifyContent","marginBottom","borderBottomStyle","ContactItem","contact","onDelete","onClick","list","ContactList","contacts","map","Filter","App","setContacts","filter","setFilter","normalizeFilter","toLowerCase","filtrContactList","includes","useEffect","contactsSave","localStorage","getItem","parsedContactsSave","JSON","parse","setItem","stringify","find","alert","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86974df7.chunk.js","sourcesContent":["import { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  container: {\r\n    marginTop: \"20px\",\r\n    padding: \"20px\",\r\n    width: \"300px\",\r\n  },\r\n});\r\nconst Container = ({ children }) => {\r\n  const classes = useStyles();\r\n\r\n  return <div className={classes.container}>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  form: {\r\n    padding: \"5px\",\r\n    border: [\"1px\", \"solid\", \"#2f2f2f\"],\r\n    borderRadius: \"4px\",\r\n  },\r\n  button: {\r\n    marginTop: \"10px\"\r\n  }\r\n});\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleNameChange = (e) => setName(e.target.value);\r\n  const handleNumberChange = (e) => setNumber(e.target.value);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    onSubmit(newContact);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <form className={classes.form} onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            // name='name'\r\n            onChange={handleNameChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            // name='name'\r\n            onChange={handleNumberChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button className={classes.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  button: {\r\n    marginLeft: \"10px\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  listItem: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: \"10px\",\r\n    // border: \"borderTopStyle\",\r\n    borderBottomStyle: \"outset\",\r\n  },\r\n});\r\n\r\nconst ContactItem = ({ contact: { id, name, number }, onDelete }) => {\r\n  const handelDelete = () => onDelete(id);\r\n  const classes = useStyles();\r\n  return (\r\n    <li className={classes.listItem}>\r\n      {name}: {number}\r\n      <button type=\"button\" onClick={handelDelete} className={classes.button}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import ContactItem from \"../ContactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport { createUseStyles } from \"react-jss\";\r\n\r\nconst useStyles = createUseStyles({\r\n  list: {\r\n    marginBottom: \"10px\",\r\n  },\r\n});\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ul className={classes.list}>\r\n      {contacts.map((contact) => (\r\n        <ContactItem key={contact.id} contact={contact} onDelete={onDelete} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name </p>\r\n      <input type=\"text\" onChange={onChange} value={value} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\";\n\nimport Container from \"./components/Container/Container\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([\n    // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n  const [filter, setFilter] = useState(\"\");\n\n  const hendleSubmit = (contact) => {\n    if (contacts.find(({ name }) => name === contact.name)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    setContacts((prevState) => [contact, ...prevState]);\n  };\n\n  const handleSearchChange = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const normalizeFilter = filter.toLowerCase();\n  const filtrContactList = contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizeFilter)\n  );\n\n  const handleDeleteContact = (id) =>\n    setContacts((prevState) =>\n      prevState.filter((contact) => contact.id !== id)\n    );\n\n  useEffect(() => {\n    // console.log(\"Чтение из localStorage\", localStorage.getItem(\"contacts\"));\n    const contactsSave = localStorage.getItem(\"contacts\");\n    const parsedContactsSave = JSON.parse(contactsSave);\n    if (parsedContactsSave) {\n      setContacts(parsedContactsSave);\n    }\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"Запись в localStorage\");\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={hendleSubmit} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={handleSearchChange} />\n      <ContactList contacts={filtrContactList} onDelete={handleDeleteContact} />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}